// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teste_Agenda_Fatec.Data;

#nullable disable

namespace Teste_Agenda_Fatec.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250504234050_Create-Database")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Teste_Agenda_Fatec.Models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AprovadorId")
                        .HasColumnType("INT");

                    b.Property<DateOnly>("Data_Requisicao")
                        .HasColumnType("DATE");

                    b.Property<DateOnly>("Data_Utilizacao")
                        .HasColumnType("DATE");

                    b.Property<TimeOnly>("Hora_Fim_Utilizacao")
                        .HasColumnType("TIME");

                    b.Property<TimeOnly>("Hora_Inicio_Utilizacao")
                        .HasColumnType("TIME");

                    b.Property<TimeOnly>("Hora_Requisicao")
                        .HasColumnType("TIME");

                    b.Property<int>("RequisitorId")
                        .HasColumnType("INT");

                    b.Property<int>("SalaId")
                        .HasColumnType("INT");

                    b.Property<string>("Situacao")
                        .HasColumnType("ENUM(\"Pendente\", \"Aprovado\", \"Negado\")");

                    b.HasKey("Id");

                    b.HasIndex("AprovadorId");

                    b.HasIndex("RequisitorId");

                    b.HasIndex("SalaId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("Teste_Agenda_Fatec.Models.Bloco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("TINYINT(1)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Blocos");
                });

            modelBuilder.Entity("Teste_Agenda_Fatec.Models.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("TINYINT(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("Teste_Agenda_Fatec.Models.Equipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("TINYINT(1)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("Teste_Agenda_Fatec.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipamentoId")
                        .HasColumnType("INT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INT");

                    b.Property<int>("SalaId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("EquipamentoId");

                    b.HasIndex("SalaId");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("Teste_Agenda_Fatec.Models.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("TINYINT(1)");

                    b.Property<int>("BlocoId")
                        .HasColumnType("INT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(5)");

                    b.Property<string>("Status_Atual")
                        .HasColumnType("ENUM(\"Disponível\", \"Em uso\", \"Indisponível\")");

                    b.HasKey("Id");

                    b.HasIndex("BlocoId");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("Teste_Agenda_Fatec.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Administrador")
                        .HasColumnType("TINYINT(1)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("TINYINT(1)");

                    b.Property<int>("CargoId")
                        .HasColumnType("INT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Teste_Agenda_Fatec.Models.Agendamento", b =>
                {
                    b.HasOne("Teste_Agenda_Fatec.Models.Usuario", "Aprovador")
                        .WithMany()
                        .HasForeignKey("AprovadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teste_Agenda_Fatec.Models.Usuario", "Requisitor")
                        .WithMany()
                        .HasForeignKey("RequisitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teste_Agenda_Fatec.Models.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aprovador");

                    b.Navigation("Requisitor");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Teste_Agenda_Fatec.Models.Item", b =>
                {
                    b.HasOne("Teste_Agenda_Fatec.Models.Equipamento", "Equipamento")
                        .WithMany()
                        .HasForeignKey("EquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teste_Agenda_Fatec.Models.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipamento");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Teste_Agenda_Fatec.Models.Sala", b =>
                {
                    b.HasOne("Teste_Agenda_Fatec.Models.Bloco", "Bloco")
                        .WithMany()
                        .HasForeignKey("BlocoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bloco");
                });

            modelBuilder.Entity("Teste_Agenda_Fatec.Models.Usuario", b =>
                {
                    b.HasOne("Teste_Agenda_Fatec.Models.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");
                });
#pragma warning restore 612, 618
        }
    }
}
